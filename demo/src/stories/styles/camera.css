[data-camera-root] [hospitality-root] {
  margin: auto;
  transform: rotateX(270deg) rotateY(90deg) translate3D(-90px, -90px, 0px);
}
[data-camera-root] {
  touch-action: none;

  cursor: -webkit-grab;
  cursor: grab;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  scrollbar-width: thin;
  font-size: 0;
  overflow: hidden;
}

[data-camera-root]::before {
  content: "";
  position: fixed;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  background-image: radial-gradient(circle at 50% 50%, #fff, #bbb);
  background-size: 100vw 100vh;
  background-repeat: no-repeat;
}

[data-camera-root]:active {
  cursor: -webkit-grabbing;
  cursor: grabbing;
}

[data-camera] {
  --unit: 1vmin;
  --zoom: 100;
  --available-screen-min: 665;
  --px: calc(var(--zoom) * (var(--unit) / var(--available-screen-min)));

  --auto-rotate-duration: 10s;
  --auto-rotate-timing-func: ease;
  --auto-rotate-direction: forwards;
  --scene-size: 500;
  --scale: 100;
  --perspective: 700;
  --cameraZ: 108;
  --cameraY: 46;
  --translateX: 0;
  --translateY: 0;
  --translateZ: 10;

  position: absolute;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  --fmt-s: calc(var(--scale, 100) / 100);
  transform: scale(var(--fmt-s));
  display: grid;
  place-items: center;
  overflow: visible;

  transition: transform ease 500ms;
  will-change: transform;
}

[data-scene] {
  position: relative;
  left: 0;
  top: 0;
  width: calc(var(--scene-size) * var(--px));
  height: calc(var(--scene-size) * var(--px));
  background-color: rgba(0, 0, 0, 0.1);
  transform: perspective(calc(var(--perspective, 1000) * 1px))
    rotateX(calc(var(--cameraY, 0) * 1deg))
    rotateZ(calc(var(--cameraZ, 0) * 1deg))
    translate3d(
      calc(var(--translateX, 0) * var(--px)),
      calc(var(--translateY, 0) * var(--px) * -1),
      calc(var(--translateZ, 0) * var(--px) * -1)
    );
  --max-rotation: calc((360 + var(--cameraZ)) * 1deg);
  transform-origin: 50% 50%;
}

[data-camera][data-dragging] {
  transition: none;
}

@keyframes rotateCamera {
  to {
    transform: perspective(calc(var(--perspective, 1000) * 1px))
      rotateX(calc(var(--cameraY, 0) * 1deg)) rotateZ(var(--max-rotation))
      translate3d(
        calc(var(--translateX, 0) * var(--px)),
        calc(var(--translateY, 0) * var(--px) * -1),
        calc(var(--translateZ, 0) * var(--px) * -1)
      );
  }
}

[data-scene],
[data-camera],
[data-3d] {
  transform-style: preserve-3d;
}

[data-hidden] {
  display: none;
}

.ball {
  width: 10vw;
  height: 10vw;
  background-color: yellow;
  border-radius: 50%;
  position: absolute;
  left: 40%;
  top: 10%;
  transform: translateZ(30px) rotateY(90deg) rotateX(180deg);
}

.semicircle {
  border-top-left-radius: 50px;
  border-top-right-radius: 50px;
  background-color: magenta;
  width: 100px;
  height: 100px;
  transform: translateX(290px) translateY(360px) translateZ(120px)
    rotateY(90deg) rotateX(180deg);
}

.cube {
  transform: rotateY(90deg) rotateX(90deg);
  /*translateZ(80px) rotateY(180deg) rotateX(90deg);*/
}

.cta {
  transform: translateZ(150px) rotateY(180deg) rotateX(90deg);
}

/* 

[data-camera-root]:active {
  cursor: -webkit-grabbing;
  cursor: grabbing;
}

[data-camera-root] {
  touch-action: none;

  cursor: -webkit-grab;
  cursor: grab;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  scrollbar-width: thin;
  font-size: 0;
  overflow: hidden;
}

[data-camera-root]::before {
  content: "";
  position: fixed;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  background-image: radial-gradient(circle at 50% 50%, #fff, #f8f8f8);
  background-size: 100vw 100vh;
  background-repeat: no-repeat;
}

[data-camera] {
  --scene-size: 500;
  --scale: 100;
  --perspective: 1200;
  --cameraZ: 0;
  --cameraY: 0;
  --translateX: 0;
  --translateY: 0;
  --translateZ: 0;
}

[data-camera] {
  position: absolute;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  --fmt-s: calc(var(--scale, 100) / 100);
  transform: scale(var(--fmt-s));
  display: grid;
  place-items: center;
  overflow: visible;
  transition: transform ease 500ms;
  will-change: transform;
}

[data-scene] {
  position: relative;
  left: 0;
  top: 0;
  width: calc(var(--scene-size) * var(--px));
  height: calc(var(--scene-size) * var(--px));
  background-color: rgba(0, 0, 0, 0.1);
  transform: perspective(calc(var(--perspective, 1000) * 1px))
    rotateX(calc(var(--cameraY, 0) * 1deg))
    rotateZ(calc(var(--cameraZ, 0) * 1deg))
    translate3d(
      calc(var(--translateX, 0) * var(--px)),
      calc(var(--translateY, 0) * var(--px) * -1),
      calc(var(--translateZ, 0) * var(--px) * -1)
    );
  --max-rotation: calc((360 + var(--cameraZ)) * 1deg);
  transform-origin: 50% 50%;
}

[data-camera][data-dragging] {
  transition: none;
}

@keyframes rotateCamera {
  to {
    transform: perspective(calc(var(--perspective, 1000) * 1px))
      rotateX(calc(var(--cameraY, 0) * 1deg)) rotateZ(var(--max-rotation))
      translate3d(
        calc(var(--translateX, 0) * var(--px)),
        calc(var(--translateY, 0) * var(--px) * -1),
        calc(var(--translateZ, 0) * var(--px) * -1)
      );
  }
}
[data-scene],
[data-camera],
[data-3d] {
  transform-style: preserve-3d;
}

[data-hidden],
.class-hidden {
  display: none;
} */
